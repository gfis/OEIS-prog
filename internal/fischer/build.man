
#
# %C A133423 The 5x+1 map sends x to x/2 if x is even, x/3 if x is divisible by 3, otherwise 5x+1.
# %C A276290 Conjecture: If n is the product of two odd primes p and q and p is equal to 3, then neither p nor q is in the trajectory of (p*q)+1 under the Collatz 3x+1 map (A014682). - _Marina Ibrishimova_, Aug 29 2016
# %C A332018 This is the '5x+1' map with the successive dividing steps removed. The 'Px+1' map with those steps removed: If x is divisible by any prime < P, then divide out those primes; otherwise multiply x by P, add 1, and then divide out the primes < P.
# %N A057684 Trajectory of 13 under the '13x+1' map.
# %N A100709 Trajectory of 1001 under "3x+1" map.
# %N A267703 Conjectured list of numbers n such that the trajectory of n under the '7x+1' map does not cycle.
# 2022-06-07
# ??? A079358	parmof4	1	A079000	1	1	n -> !n.mod(Z.THREE).isZero() && !n.mod(Z.FOUR).isZero()	"spig"	is not a multiple of either 3 or 4.".	
# A079255	parmof4	1	A079000	1	n -> n.	"spig"	is odd and a(n+1) is even" can be satisfied.	
# A079325	parmof4	1	A079000	1	n -> n.	"spig"	is a member of A079000".	
# A080653	parmof4	1	A079000	2	n -> n.	"s ig"	nice,synth	1..65	unkn	_Matthew Vandermast_, Mar 01 2003
# A175527 nyi Fto  Digit sum of 13^n.      base,nonn,      0..1000 nyi     _N. J
# A298350	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a(-(-n/2)).multiply2())           	a(n) = a(n-1)+a(n-2)+2 a(ceiling(n/2))                   1,1,1
# A298404	genrec1	0	1,1,1	n -> a(n-1).multiply2().subtract(a(n-3)).add(a(-(-n/2)))      	a(n) = 2*a(n-1)-a(n-3)+a(ceiling(n/2))                   1,1,1
# grep -Pi "(\d+|p)\*?x *\+ *1[^m]+map" jcat25.txt
# guide in A298338
# limit? A079256	parmof4	1	A079000	1	1	n -> n.bitCount() == 1	"spig"	is a power of 2".	
A057522	parm3	0	A057522	73	2,3,5,7,11,13
A057534	parm3	0	A057522	61	2,3,5,7,11,13,17
A057614	parm3	0	A057522	17	2,3,5,7,11
A057684	parm3	0	A057522	13	2,3,5,7,11,13
A057685	parm3	0	A057522	19	2,3,5,7,11,13,17,19
A057686	parm3	0	A057522	23	2,3,5,7,11,13,17,19,23
A057687	parm3	0	A057522	29	2,3,5,7,11,13,17,19,23,29
A062634	parm3	1	A062634	false	1	every divisor       of k contains the digit 1.	nonn,base,easy,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062649	parm3	1	A062634	true	1	Composite hat every divisor            contains the digit 1.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062653	parm3	1	A062634	false	2	Every divisor (except 1) contains the digit 2.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062664	parm3	1	A062634	true	2	Composite and every divisor (except 1) contains the digit 2.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062667	parm3	1	A062634	false	3	Every divisor (except 1) contains the digit 3.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062668	parm3	1	A062634	true	3	Composite and every divisor (except 1) contains the digit 3.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062669	parm3	1	A062634	false	4	Every divisor (except 1) contains the digit 4.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062670	parm3	1	A062634	true	4	Composite and every divisor (except 1) contains the digit 4.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062671	parm3	1	A062634	false	5	Every divisor (except 1) contains the digit 5.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062672	parm3	1	A062634	true	5	Composite and every divisor (except 1) contains the digit 5.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062673	parm3	1	A062634	false	6	Every divisor (except 1) contains the digit 6.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062674	parm3	1	A062634	true	6	Composite and every divisor (except 1) contains the digit 6.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062675	parm3	1	A062634	false	7	Every divisor (except 1) contains the digit 7.	nonn,base,easy,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062676	parm3	1	A062634	true	7	Composite and every divisor (except 1) contains the digit 7.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062677	parm3	1	A062634	false	8	every divisor (except 1) contains the digit 8.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062678	parm3	1	A062634	true	8	Composite and every divisor (except 1) contains the digit 8.	base,easy,nonn,changed,	1..10000	nyi	_Erich Friedman_, Jul 04 2001
A062679	parm3	1	A062634	false	9	Numbers such that every divisor (except 1, but including the number itself) contains the digit 9.
A062680	parm3	1	A062634	true	9	Composite numbers whose divisors (except 1) all contain the digit 9.
A065122	parm3	1	A065122	10	 2	a(n) is smallest prime > 10*a(n-1)  a(1) =  2; .
A065533	parm3	1	A065122	10	 3	a(n) is smallest prime > 10*a(n-1), a(1) =  3.
A065534	parm3	1	A065122	10	 5	a(n) is smallest prime > 10*a(n-1), a(1) =  5.
A065537	parm3	1	A065122	10	 7	a(n) is smallest prime > 10*a(n-1), a(1) =  7.
A065538	parm3	1	A065122	10	11	a(n) is smallest prime > 10*a(n-1), a(1) = 11.
A065539	parm3	1	A065122	10	13	a(n) is smallest prime > 10*a(n-1), a(1) = 13.
A065540	parm3	1	A065122	 3	 3	a(n) is smallest prime >  3*a(n-1), a(1) =  3.
A065541	parm3	1	A065122	 5	 5	a(n) is smallest prime >  5*a(n-1), a(1) =  5.
A065542	parm3	1	A065122	 7	 7	a(n) is smallest prime >  7*a(n-1), a(1) =  7.
A065543	parm3	1	A065122	11	11	a(n) is smallest prime > 11*a(n-1), a(1) = 11.
A065544	parm3	1	A065122	13	13	a(n) is smallest prime > 13*a(n-1), a(1) = 13.
A065545	parm3	1	A065122	 2	 3	a(n) is smallest prime >  2*a(n-1), a(1) =  3.
A065546	parm3	1	A065122	 2	13	a(n) is smallest prime >  2*a(n-1), a(1) = 13.
A076656	parm3	1	A065122	 3	 2	a(n) is smallest prime >  3*a(n-1)  a(1) =  2;
A079000	parmof4	1	A079000	1	1	n -> n.isOdd()	"spig"	is odd".	
A079253	parmof4	0	A079000	0	1	n -> n.isEven()	"spig"	is even".	
A079254	parmof4	1	A079000	1	1	n -> n.isProbablePrime()	"spig"	is prime".	
A079257	parmof4	0	A079000	0	1	n -> n.multiply(8).add(1).isSquare()	"spig"	is a triangular number".	
A079258	parmof4	0	A079000	0	1	n -> n.isSquare()	"spig"	is a square".	
A079313	parmof4	1	A079000	1	02	n -> n.isOdd()	"spip"	is odd".	
A080029	parmof4	0	A079000	0	02	n -> n.mod(Z.THREE).isZero()	"spip"	is a multiple of 3".	
A080030	parmof4	0	A079000	2	02	n -> n.mod(Z.THREE).equals(Z.ONE)	"spip"	is congruent to 1 mod 3".	
A080031	parmof4	1	A079000	1	02	n -> n.mod(Z.THREE).equals(Z.TWO)	"spip"	is congruent to 2 mod 3".	
A080032	parmof4	1	A079000	1	2	n -> n.isEven()	"spip"	is even".	
A080033	parmof4	1	A079000	1	2	n -> n.mod(Z.FOUR).isZero()	"spip"	is a multiple of 4".	
A080034	parmof4	1	A079000	1	2	n -> n.mod(Z.FOUR).equals(Z.THREE)	"spip"	is congruent to 3 mod 4".	
A080591	parmof4	1	A079000	1	1	n -> n.mod(Z.FOUR).equals(Z.THREE)	"spig"	is congruent to 3 mod 4".	
A080639	parmof4	1	A079000	1	04	n -> n.isEven()	"s ig"	is even".	
A080640	parmof4	1	A079000	3	1	n -> n.mod(Z.FOUR).isZero()	"s ig"	is divisible by 4".	
A080641	parmof4	1	A079000	4	1	n -> n.mod(Z.FIVE).isZero()	"s ig"	is divisible by 5".	
A080644	parmof4	1	A079000	5	1	n -> n.mod(Z.SIX).isZero()	"s ig"	is divisible by 6".	
A080710	parmof4	0	A079000	1	1	n -> n.mod(Z.THREE).isZero()	"s ig"	is a multiple of 3".	
A080711	parmof4	0	A079000	2	1	n -> n.mod(Z.THREE).isZero()	"s ig"	is a multiple of 3".	
A080712	parmof4	0	A079000	4	1	n -> n.mod(Z.THREE).isZero()	"s ig"	is a multiple of 3".	
A080720	parmof4	0	A079000	5	1	n -> n.mod(Z.THREE).isZero()	"s ig"	is a multiple of 3".	
A080722	parmof4	0	A079000	0	04	n -> n.mod(Z.THREE).equals(Z.ONE)	"s ig"	== 1 mod 3".	
A080723	parmof4	0	A079000	1	04	n -> n.mod(Z.THREE).equals(Z.ONE)	"s ig"	== 1 mod 3".	
A080724	parmof4	0	A079000	2	1	n -> n.mod(Z.THREE).equals(Z.ONE)	"s ig"	== 1 mod 3".	
A080725	parmof4	1	A079000	2	1	n -> n.mod(Z.THREE).equals(Z.ONE)	"s ig"	== 1 mod 3".	
A080726	parmof4	0	A079000	0	04	n -> n.mod(Z.THREE).equals(Z.TWO)	"s ig"	== 2 mod 3".	
A080727	parmof4	0	A079000	1	1	n -> n.mod(Z.THREE).equals(Z.TWO)	"s ig"	== 2 mod 3".	
A080728	parmof4	0	A079000	3	1	n -> n.mod(Z.THREE).equals(Z.TWO)	"s ig"	== 2 mod 3".	
A085925	parmof4	1	A079000	1	1	n -> !n.isProbablePrime()	"s ig"	is not prime".	
A099797	parmof4	1	A079000	1	1	n -> !n.isProbablePrime() && !n.equals(Z.ONE)	"spig"	is composite".	
A099798	parmof4	1	A079000	1	1	n -> n.isProbablePrime() || n.equals(Z.ONE)	"spig"	is not composite".	
A100709	parm3	0	A057522	1001	2,3
A103566	parm3	1	A103566	new A039701()	1	a(n+1)-a(n) = A039701(n+4) (first differences)
A103567	parm3	1	A103566	new A039703()	2	a(n+1)-a(n) = A039703(n+4)
A103568	parm3	1	A103566	new A039705()	0	a(n+1)-a(n) = A039705(n+4)
A103569	parm3	1	A103566	new A039709()	7	a(n+1)-a(n) = A039709(n+4)
A103570	parm3	1	A103566	new A039711()	7	a(n+1)-a(n) = A039711(n+4)
A103571	parm3	1	A103566	new A039715()	7	a(n+1)-a(n) = A039715(n+4)
A103572	parm3	1	A103566	new A033633()	7	a(n+1)-a(n) = A033633(n+4)
A175434	parm2	1	A175434	2	(Digit sum of 2^n) mod n.	nonn,base,synth	1..100	nyi	_N. J. A. Sloane_, Dec 03 2010
A175435	parm2	1	A175434	3	(Digit sum of 3^n) mod n.	nonn,base,	1..5000	nyi	_N. J. A. Sloane_, Dec 03 2010
A175442	parm3	1	A175442	2	3	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=3
A175443	parm3	1	A175442	2	5	         a(n+1) = smallest prime > a(n) such that a(n+1)+a(n) is multiple of 5.
A175444	parm3	1	A175442	2	7	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=7
A175445	parm3	1	A175442	2	9	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=9
A175446	parm3	1	A175442	2	11	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=11
A175447	parm3	1	A175442	2	13	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=13
A175448	parm3	1	A175442	2	15	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=15
A175449	parm3	1	A175442	2	17	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=17
A175450	parm3	1	A175442	2	19	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=19
A175451	parm3	1	A175442	2	21	a(n)>a(n-1), a(n) = smallest prime such that a(n)+a(n-1) is multiple of m, m=21
A175456	parm2	1	A175434	5	(Digit sum of 5^n) mod n.	nonn,base,synth	1..100	nyi	_N. J. A. Sloane_, Dec 03 2010
A175457	parm2	1	A175434	6	(Digit sum of 6^n) mod n.	nonn,base,synth	1..100	nyi	_N. J. A. Sloane_, Dec 03 2010
A175512	parm2	1	A175434	7	(Digit sum of 7^n) mod n.       base,nonn,synth 1..100  nyi
A175528	parm2	1	A175434	13	(Digit sum of 13^n) mod n.      nonn,base,      1..10000
A175560	parm2	1	A175434	167	(Digit sum of 167^n) mod n.     base,nonn,synth 1..120  nyi
A243819	parm3	1	A062634	true	0	Composite numbers n such that every divisor greater than one of n contains the digit 0.
A243825	parm3	1	A062634	false	0	Numbers n such that every divisor greater than 1 contains the digit 0.
A283765	posubse	1	A000201	term.isEven()		a(n+1) - a(n) is in {1,3,4}
A283766	posubse	1	A000201	term.isOdd()		a(n+1) - a(n) is in {1,3,4}
A283767	posubse	1	A001950	term.isEven()		a(n+1) - a(n) is in {1,2,3}
A283768	posubse	1	A001950	term.isOdd()		a(n+1) - a(n) is in {1,2,3}
A283769	posubse	1	A000201	term.mod(Z.THREE).equals(Z.ZERO)		a(n+1) - a(n) is in {2,5,7}
A283770	posubse	1	A000201	term.mod(Z.THREE).equals(Z.ONE)		a(n+1) - a(n) is in {2,5,7}
A283771	posubse	1	A000201	term.mod(Z.THREE).equals(Z.TWO)		a(n+1) - a(n) is in {2,5,7}
A283772	posubse	1	A001950	term.mod(Z.THREE).equals(Z.ZERO)		a(n+1) - a(n) is in {1,6,7}
A283773	posubse	1	A001950	term.mod(Z.THREE).equals(Z.ONE)		a(n+1) - a(n) is in {1,6,7}
A283774	posubse	1	A001950	term.mod(Z.THREE).equals(Z.TWO)		a(n+1) - a(n) is in {1,6,7}
A283775	posubse	1	A022838	term.isEven()		a(n+1) - a(n) is in {1,4,5}
A283776	posubse	1	A022838	term.isOdd()		a(n+1) - a(n) is in {1,4,5}
A283777	posubse	0	A022843	term.isEven()	next();	a(n+1) - a(n) is in {1,2,3}
A283778	posubse	0	A022843	term.isOdd()		a(n+1) - a(n) is in {1,2,3}
A298338	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a(n/2))                           	a(n) = a(n-1)+a(n-2)+a([n/2])                            1,1,1
A298339	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a(n/2))                           	a(n) = a(n-1)+a(n-2)+a([n/2])                            1,2,3
A298340	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a(n/3))                           	a(n) = a(n-1)+a(n-2)+a([n/3])                            1,1,1
A298341	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a(n/3))                           	a(n) = a(n-1)+a(n-2)+a([n/3])                            1,2,3
A298342	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a(2*n/3))                         	a(n) = a(n-1)+a(n-2)+a([2n/3])                           1,1,1
A298343	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a(2*n/3))                         	a(n) = a(n-1)+a(n-2)+a([2n/3])                           1,2,3
A298344	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a(n/3)).add(a(2*n/3))             	a(n) = a(n-1)+a(n-2)+a([n/3]) +  a([2n/3])               1,1,1
A298345	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a(n/3)).add(a(2*n/3))             	a(n) = a(n-1)+a(n-2)+a([n/3]) +  a([2n/3])               1,2,3
A298346	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a(n/2).multiply2())               	a(n) = a(n-1)+a(n-2)+2 a([n/2])                          1,1,1
A298347	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a(n/2).multiply2())               	a(n) = a(n-1)+a(n-2)+2 a([n/2])                          1,2,3
A298348	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a((n+1)/2))                       	a(n) = a(n-1)+a(n-2)+2 a([(n+1)/2])                      1,1,1
A298349	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a((n+1)/2))                       	a(n) = a(n-1)+a(n-2)+2 a([(n+1)/2])                      1,2,3
A298350	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a((int) Math.ceil((double) n/2)).multiply2())                       	a(n) = a(n-1)+a(n-2)+2 a(ceiling(n/2))                   1,1,1
A298351	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a((int) Math.ceil((double) n/2)).multiply2())                       	a(n) = a(n-1)+a(n-2)+2 a(ceiling(n/2))                   1,2,3
A298352	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a((n-1)/2))                       	a(n) = a(n-1)+a(n-2)+a([(n-1)/2])                        1,1,1
A298353	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a((n-1)/2))                       	a(n) = a(n-1)+a(n-2)+a([(n-1)/2])                        1,2,3
A298354	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(a((n-1)/2).multiply2())           	a(n) = a(n-1)+a(n-2)+2 a([(n-1)/2])                      1,1,1
A298355	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(a((n-1)/2).multiply2())           	a(n) = a(n-1)+a(n-2)+2 a([(n-1)/2])                      1,2,3
A298356	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k)))      	a(n) = a(n-1)+a(n-2)+a(n/2])+a([n/3]+...+a([n/n})       1,1,1
A298357	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k)))      	a(n) = a(n-1)+a(n-2)+a(n/2])+a([n/3]+...+a([n/n})       1,2,3
A298369	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k).multiply(k)))  	a(n) = a(n-1)+a(n-2)+2a([n/2])+3a([n/3]+...+4 a([n/n})   1,1,1
A298370	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k).multiply(k))) 	a(n) = a(n-1)+a(n-2)+2a([n/2])+3a([n/3]+...+4a([n/n])    1,2,3
A298400	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2)).subtract(a(n/2).multiply(n))          	a(n) = a(n-1)+a(n-2)-a([n/2])                            1,1,1
A298401	genrec1	0	1,2,3	n -> a(n-1).add(a(n-2)).subtract(a(n/2).multiply(n))          	a(n) = a(n-1)+a(n-2)-a([n/2])                            1,2,3
A298402	genrec1	0	1,1,1	n -> a(n-1).multiply2().subtract(a(n-3)).add(a(n/2))          	a(n) = 2*a(n-1)-a(n-3)+a([n/2])                          1,1,1
A298403	genrec1	0	1,2,3	n -> a(n-1).multiply2().subtract(a(n-3)).add(a(n/2))          	a(n) = 2*a(n-1)-a(n-3)+a([n/2])                          1,2,3
A298404	genrec1	0	1,1,1	n -> a(n-1).multiply2().subtract(a(n-3)).add(a((int) Math.ceil((double) n/2)))      	a(n) = 2*a(n-1)-a(n-3)+a(ceiling(n/2))                   1,1,1
A298405	genrec1	0	1,2,3	n -> a(n-1).multiply2().subtract(a(n-3)).add(a((int) Math.ceil((double) n/2)))      	a(n) = 2*a(n-1)-a(n-3)+a(ceiling(n/2))                   1,2,3
A298406	genrec1	0	1,1,1	n -> a(n-1).multiply2().subtract(a(n-3)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k)))  	a(n) = 2*a(n-1)-a(n-3)+a([n/2])+a([n/3]+...+ a([n/n])    1,1,1
A298407	genrec1	0	1,2,3	n -> a(n-1).multiply2().subtract(a(n-3)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k)))  	a(n) = 2*a(n-1)-a(n-3)+a([n/2])+a([n/3]+...+ a([n/n])    1,2,3
A298408	genrec1	0	1,1,1	n -> a(n-1).multiply2().subtract(a(n-3)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k).multiply(k)))	a(n) = 2*a(n-1)-a(n-3)+2a([n/2])+3a([n/3]+...+ 4a([n/n]) 1,1,1
A298409	genrec1	0	1,2,3	n -> a(n-1).multiply2().subtract(a(n-3)).add(Integers.SINGLETON.sum(2, n, k -> a(n/k).multiply(k)))	a(n) = 2*a(n-1)-a(n-3)+2a([n/2])+3a([n/3]+...+ 4a([n/n]) 1,2,3
A298412	genrec1	0	1,1,1	n -> a(n-1).multiply2().add(a(n-2)).add(a(n/2))	, where a(0) = 1, a(1) = 1, a(2) = 1.	a(n) = 2*a(n-1) + a(n-2) + a([n/2]), where a(0) = 1, a(1) = 1, a(2) = 1.	
A298413	genrec1	0	1,2,3	n -> a(n/2).multiply(a((int) Math.ceil((double) n/2)))	, where a(0) = 1, a(1) = 2, a(2) = 3.	a(n) = a(floor(n/2))*a(ceiling(n/2)), where a(0) = 1, a(1) = 2, a(2) = 3.	
A298414	genrec1	0	1,1,1	n -> a(n-1).multiply2().subtract(a(n-2)).add(a(n/2))	, where a(0) = 1, a(1) = 1, a(2) = 1.	a(n) = 2*a(n-1) - a(n-2) + a([n/2]), where a(0) = 1, a(1) = 1, a(2) = 1.	
A298415	genrec1	0	1,1,1	n -> a(n-1).add(a(n-2).multiply2()).add(a(n/2))	, where a(0) = 1, a(1) = 1, a(2) = 1.	a(n) = a(n-1) + 2*a(n-2) + a([n/2]), where a(0) = 1, a(1) = 1, a(2) = 1.	
A298416	genrec1	0	1,1,1	n -> a(n-1).multiply2().add(a(n-2).multiply2()).subtract(a(n/2))	, where a(0) = 1, a(1) = 1, a(2) = 1.	a(n) = 2*a(n-1) + 2*a(n-2) - a([n/2]), where a(0) = 1, a(1) = 1, a(2) = 1.	
A298417	genrec1	0	1,1,1	n -> a(n-1).multiply2().add(a(n-2).multiply2()).add(a(n/2))	, where a(0) = 1, a(1) = 1, a(2) = 1.	a(n) = 2*a(n-1) + 2*a(n-2) + a([n/2]), where a(0) = 1, a(1) = 1, a(2) = 1.	
A298419	genrec1	0	1,1,1	n -> a(n-1).multiply(n).subtract(a(n-2)).add(a(n/2))	, where a(0) = 1, a(1) = 1, a(2) = 1.	a(n) = n*a(n-1) - a(n-2) + a([n/2]), where a(0) = 1, a(1) = 1, a(2) = 1.	
A334067	parmof4	1	A079000	1	1	n -> n.isProbablePrime()	"spig"	is prime" where indices start from 0.	
