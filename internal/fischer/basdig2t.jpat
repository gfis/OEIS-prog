package irvine.oeis.$(PACK);
// Generated by $(GEN) $(CALLCODE) $(PARM1) $(PARM2) $(PARM3) $(PARM4) at $(DATE)
// DO NOT EDIT here!

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * $(ASEQNO) $(NAME)
 * @author $(AUTHOR)
 */
public class $(ASEQNO) implements Sequence {

  private Z mN;
  private String mDig1;
  private String mDig2;

  public $(ASEQNO) () {
    mN = Z.valueOf($(OFFSET));
    mDig1 = String.format("%02d", $(PARM3));
    mDig2 = String.format("%02d", $(PARM4));
  }

  private boolean isOk(Z an) {
    String digits = an.toTwoDigits($(PARM1));
    if ((digits.length() & 1) != 0) {
      digits = "0" + digits;
    }
    int count1 = 0;
    int count2 = 0;
    int idig = digits.length() - 2;
    while (idig >= 0) {
      if (digits.substring(idig, idig + 2).equals(mDig1)) {
        count1++;
      } else if (digits.substring(idig, idig + 2).equals(mDig2)) {
        count2++;
      }
      idig -= 2;
    }
    return $(PARM2) count1 == count2;
  }

  @Override
  public Z next() {
    while (! isOk(mN)) {
      mN = mN.add(1);
    }
    Z result = mN;
    mN = mN.add(1);
    return result;
  }
}
