package irvine.oeis.$(PACK);
// Generated by $(GEN) $(CALLCODE) $(PARM1) $(PARM2) $(PARM3) $(PARM4) at $(DATE)
// DO NOT EDIT here!

import irvine.math.z.Z;
import irvine.oeis.Sequence;

/**
 * $(ASEQNO) $(NAME)
 * @author $(AUTHOR)
 */
public class $(ASEQNO) implements Sequence {

  private long mN = -1;
  private Z mA = Z.valueOf($(PARM1)L);

  @Override
  public Z next() {
    while (true) {
      if (++mN > 0) {
        mA = mA.multiply($(PARM2));
      }
      if (mA.add($(PARM3))$(PARM4).isProbablePrime()) {
        return Z.valueOf(mN);
      }
    }
  }
}
