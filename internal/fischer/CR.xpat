# CR.xpat - Mapping table seqdb -> irvine.math.cr.CR infix expression generation
# @(#) $Id$
# 2021-07-08, Georg Fischer
#
0	numb	0	CR.ZERO	0
1	numb	0	CR.ONE	0
2	numb	0	CR.TWO	0
3	numb	0	CR.THREE	0
4	numb	0	CR.FOUR	0
5	numb	0	CR.FIVE	0
6	numb	0	CR.SIX	0
7	numb	0	CR.SEVEN	0
8	numb	0	CR.EIGHT	0
9	numb	0	CR.NINE	0
10	numb	0	CR.TEN	0
01234567	numb	0	CR.valueOf(01234567)	0

n	name	0	CR.valueOf(mN)	0
Pi	name	0	CR.PI	0
e	name	0	CR.E	0
phi	name	0	CR.PHI	0
gamma	name	0	CR.GAMMA	0
eulergamma	name	0	CR.GAMMA

+	meth	2	.add(	0
-	meth	2	.subtract(	0
-.	meth	1	.negate(	0
*	meth	2	.multiply(	0
/	meth	2	.divide(	0
%	meth	2	.mod(	0
^	func	1	.pow(	1

abs)	meth	1	.abs(	0
agm)	meth	2	.agm(	0
AGM)	meth	2	.agm(	0
ceil)	meth	1	.ceil(	0
ei)	meth	1	.ei(	0
li)	meth	1	.li(	0
si)	meth	1	.si(	0
erf)	meth	1	.erf(	0
erfc)	meth	1	.erfc(	0
exp)	meth	1	.exp(	0
floor)	meth	1	.floor(	0
log)	meth	1	.log(	0
log_2)	meth	1	.log().divide(CR.TWO.log()	0
log_3)	meth	1	.log().divide(CR.THREE.log()	0
log_5)	meth	1	.log().divide(CR.FIVE.log()	0
log_10)	meth	1	.log().divide(CR.TEN.log()	0
round)	meth	1	.round(	0
sqrt)	meth	1	.sqrt(	0

cos)	meth	1	.cos(	0
sin)	meth	1	.sin(	0

# zeta)	func	1	Zeta.zeta(	1
arccos)	func	1	REALS.acos(	1
arcsin)	func	1	REALS.asin(	1
arctan)	func	1	REALS.atan(	1
arccot)	func	1	REALS.acot(	1
acos)	func	1	REALS.acos(	1
asin)	func	1	REALS.asin(	1
atan)	func	1	REALS.atan(	1
acot)	func	1	REALS.acot(	1
cosh)	func	1	REALS.cosh(	1
sinh)	func	1	REALS.sinh(	1
tan)	func	1	REALS.tan(	1
tanh)	func	1	REALS.tanh(	1
cot)	func	1	REALS.cot(	1
coth)	func	1	REALS.coth(	1
csc)	func	1	REALS.csc(	1
sec)	func	1	REALS.sec(	1
sech)	func	1	REALS.sech(	1
csch)	func	1	REALS.csch(	1
cosech)	func	1	REALS.csch(	1

# omega	irvine.factor.factor.Cheetah.factor(mN).omega()
# phi	irvine.math.LongUtils.phi(mN)
# sigma	irvine.factor.factor.Cheetah.factor(mN).sigma()
